// Mocks generated by Mockito 5.4.4 from annotations
// in position/test/mock/appMock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes, invalid_use_of_internal_member
import 'dart:async' as _i6;

import 'package:chopper/chopper.dart' as _i9;
import 'package:drift/drift.dart' as _i4;
import 'package:drift/src/runtime/executor/stream_queries.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;
import 'package:position/src/core/database/db.dart' as _i3;
import 'package:position/src/core/helpers/network.dart' as _i21;
import 'package:position/src/core/helpers/sharedpreferences.dart' as _i20;
import 'package:position/src/core/services/apiService.dart' as _i8;
import 'package:position/src/core/utils/result.dart' as _i2;
import 'package:position/src/modules/app/models/api_model/api_model.dart'
    as _i15;
import 'package:position/src/modules/auth/api/auth/authApiService.dart' as _i11;
import 'package:position/src/modules/auth/api/setting/settingApiService.dart'
    as _i12;
import 'package:position/src/modules/auth/db/setting/setting.dao.dart' as _i18;
import 'package:position/src/modules/auth/db/user/user.dao.dart' as _i19;
import 'package:position/src/modules/auth/models/auth_model/auth_model.dart'
    as _i14;
import 'package:position/src/modules/auth/models/setting_model/setting.dart'
    as _i17;
import 'package:position/src/modules/auth/models/user_model/abonnement.dart'
    as _i23;
import 'package:position/src/modules/auth/models/user_model/role.dart' as _i22;
import 'package:position/src/modules/auth/models/user_model/user.dart' as _i7;
import 'package:position/src/modules/auth/repositories/auth/authRepository.dart'
    as _i13;
import 'package:position/src/modules/auth/repositories/setting/settingRepository.dart'
    as _i16;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeType_0 extends _i1.SmartFake implements Type {
  _FakeType_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResult_1<T> extends _i1.SmartFake implements _i2.Result<T> {
  _FakeResult_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMyDatabase_2 extends _i1.SmartFake implements _i3.MyDatabase {
  _FakeMyDatabase_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseConnection_3 extends _i1.SmartFake
    implements _i4.DatabaseConnection {
  _FakeDatabaseConnection_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDriftDatabaseOptions_4 extends _i1.SmartFake
    implements _i4.DriftDatabaseOptions {
  _FakeDriftDatabaseOptions_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQueryExecutor_5 extends _i1.SmartFake implements _i4.QueryExecutor {
  _FakeQueryExecutor_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamQueryStore_6 extends _i1.SmartFake
    implements _i5.StreamQueryStore {
  _FakeStreamQueryStore_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseConnectionUser_7 extends _i1.SmartFake
    implements _i4.DatabaseConnectionUser {
  _FakeDatabaseConnectionUser_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$SettingTableTable_8 extends _i1.SmartFake
    implements _i3.$SettingTableTable {
  _Fake$SettingTableTable_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_9<T1> extends _i1.SmartFake implements _i6.Future<T1> {
  _FakeFuture_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInsertStatement_10<T1 extends _i4.Table, D1> extends _i1.SmartFake
    implements _i4.InsertStatement<T1, D1> {
  _FakeInsertStatement_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateStatement_11<T extends _i4.Table, D> extends _i1.SmartFake
    implements _i4.UpdateStatement<T, D> {
  _FakeUpdateStatement_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSimpleSelectStatement_12<T1 extends _i4.HasResultSet, D>
    extends _i1.SmartFake implements _i4.SimpleSelectStatement<T1, D> {
  _FakeSimpleSelectStatement_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeJoinedSelectStatement_13<FirstT extends _i4.HasResultSet, FirstD>
    extends _i1.SmartFake implements _i4.JoinedSelectStatement<FirstT, FirstD> {
  _FakeJoinedSelectStatement_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDeleteStatement_14<T1 extends _i4.Table, D1> extends _i1.SmartFake
    implements _i4.DeleteStatement<T1, D1> {
  _FakeDeleteStatement_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSelectable_15<T> extends _i1.SmartFake implements _i4.Selectable<T> {
  _FakeSelectable_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGenerationContext_16 extends _i1.SmartFake
    implements _i4.GenerationContext {
  _FakeGenerationContext_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$UserTableTable_17 extends _i1.SmartFake
    implements _i3.$UserTableTable {
  _Fake$UserTableTable_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserTableData_18 extends _i1.SmartFake implements _i3.UserTableData {
  _FakeUserTableData_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_19 extends _i1.SmartFake implements _i7.User {
  _FakeUser_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i8.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.ChopperClient get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _i10.dummyValue<_i9.ChopperClient>(
          this,
          Invocation.getter(#client),
        ),
      ) as _i9.ChopperClient);

  @override
  set client(_i9.ChopperClient? _client) => super.noSuchMethod(
        Invocation.setter(
          #client,
          _client,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Type get definitionType => (super.noSuchMethod(
        Invocation.getter(#definitionType),
        returnValue: _FakeType_0(
          this,
          Invocation.getter(#definitionType),
        ),
      ) as Type);

  @override
  _i6.Future<_i9.Response<dynamic>> getAppSettings() => (super.noSuchMethod(
        Invocation.method(
          #getAppSettings,
          [],
        ),
        returnValue: _i6.Future<_i9.Response<dynamic>>.value(
            _i10.dummyValue<_i9.Response<dynamic>>(
          this,
          Invocation.method(
            #getAppSettings,
            [],
          ),
        )),
      ) as _i6.Future<_i9.Response<dynamic>>);

  @override
  _i6.Future<_i9.Response<dynamic>> login(Map<String, dynamic>? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [body],
        ),
        returnValue: _i6.Future<_i9.Response<dynamic>>.value(
            _i10.dummyValue<_i9.Response<dynamic>>(
          this,
          Invocation.method(
            #login,
            [body],
          ),
        )),
      ) as _i6.Future<_i9.Response<dynamic>>);

  @override
  _i6.Future<_i9.Response<dynamic>> register(Map<String, dynamic>? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [body],
        ),
        returnValue: _i6.Future<_i9.Response<dynamic>>.value(
            _i10.dummyValue<_i9.Response<dynamic>>(
          this,
          Invocation.method(
            #register,
            [body],
          ),
        )),
      ) as _i6.Future<_i9.Response<dynamic>>);

  @override
  _i6.Future<_i9.Response<dynamic>> registerfacebook(
          Map<String, dynamic>? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerfacebook,
          [body],
        ),
        returnValue: _i6.Future<_i9.Response<dynamic>>.value(
            _i10.dummyValue<_i9.Response<dynamic>>(
          this,
          Invocation.method(
            #registerfacebook,
            [body],
          ),
        )),
      ) as _i6.Future<_i9.Response<dynamic>>);

  @override
  _i6.Future<_i9.Response<dynamic>> registergoogle(
          Map<String, dynamic>? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #registergoogle,
          [body],
        ),
        returnValue: _i6.Future<_i9.Response<dynamic>>.value(
            _i10.dummyValue<_i9.Response<dynamic>>(
          this,
          Invocation.method(
            #registergoogle,
            [body],
          ),
        )),
      ) as _i6.Future<_i9.Response<dynamic>>);

  @override
  _i6.Future<_i9.Response<dynamic>> registerapple(Map<String, dynamic>? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerapple,
          [body],
        ),
        returnValue: _i6.Future<_i9.Response<dynamic>>.value(
            _i10.dummyValue<_i9.Response<dynamic>>(
          this,
          Invocation.method(
            #registerapple,
            [body],
          ),
        )),
      ) as _i6.Future<_i9.Response<dynamic>>);

  @override
  _i6.Future<_i9.Response<dynamic>> getuser(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getuser,
          [token],
        ),
        returnValue: _i6.Future<_i9.Response<dynamic>>.value(
            _i10.dummyValue<_i9.Response<dynamic>>(
          this,
          Invocation.method(
            #getuser,
            [token],
          ),
        )),
      ) as _i6.Future<_i9.Response<dynamic>>);

  @override
  _i6.Future<_i9.Response<dynamic>> forgetPassword(
          Map<String, dynamic>? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #forgetPassword,
          [body],
        ),
        returnValue: _i6.Future<_i9.Response<dynamic>>.value(
            _i10.dummyValue<_i9.Response<dynamic>>(
          this,
          Invocation.method(
            #forgetPassword,
            [body],
          ),
        )),
      ) as _i6.Future<_i9.Response<dynamic>>);

  @override
  _i6.Future<_i9.Response<dynamic>> resetPassword(Map<String, dynamic>? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [body],
        ),
        returnValue: _i6.Future<_i9.Response<dynamic>>.value(
            _i10.dummyValue<_i9.Response<dynamic>>(
          this,
          Invocation.method(
            #resetPassword,
            [body],
          ),
        )),
      ) as _i6.Future<_i9.Response<dynamic>>);

  @override
  _i6.Future<_i9.Response<dynamic>> logout(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #logout,
          [token],
        ),
        returnValue: _i6.Future<_i9.Response<dynamic>>.value(
            _i10.dummyValue<_i9.Response<dynamic>>(
          this,
          Invocation.method(
            #logout,
            [token],
          ),
        )),
      ) as _i6.Future<_i9.Response<dynamic>>);
}

/// A class which mocks [AuthApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthApiService extends _i1.Mock implements _i11.AuthApiService {
  MockAuthApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i9.Response<dynamic>> login(
    String? identifiant,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            identifiant,
            password,
          ],
        ),
        returnValue: _i6.Future<_i9.Response<dynamic>>.value(
            _i10.dummyValue<_i9.Response<dynamic>>(
          this,
          Invocation.method(
            #login,
            [
              identifiant,
              password,
            ],
          ),
        )),
      ) as _i6.Future<_i9.Response<dynamic>>);

  @override
  _i6.Future<_i9.Response<dynamic>> register(
    String? name,
    String? email,
    String? phone,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [
            name,
            email,
            phone,
            password,
          ],
        ),
        returnValue: _i6.Future<_i9.Response<dynamic>>.value(
            _i10.dummyValue<_i9.Response<dynamic>>(
          this,
          Invocation.method(
            #register,
            [
              name,
              email,
              phone,
              password,
            ],
          ),
        )),
      ) as _i6.Future<_i9.Response<dynamic>>);

  @override
  _i6.Future<_i9.Response<dynamic>> registerfacebook(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerfacebook,
          [token],
        ),
        returnValue: _i6.Future<_i9.Response<dynamic>>.value(
            _i10.dummyValue<_i9.Response<dynamic>>(
          this,
          Invocation.method(
            #registerfacebook,
            [token],
          ),
        )),
      ) as _i6.Future<_i9.Response<dynamic>>);

  @override
  _i6.Future<_i9.Response<dynamic>> registergoogle(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #registergoogle,
          [token],
        ),
        returnValue: _i6.Future<_i9.Response<dynamic>>.value(
            _i10.dummyValue<_i9.Response<dynamic>>(
          this,
          Invocation.method(
            #registergoogle,
            [token],
          ),
        )),
      ) as _i6.Future<_i9.Response<dynamic>>);

  @override
  _i6.Future<_i9.Response<dynamic>> registerapple(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerapple,
          [token],
        ),
        returnValue: _i6.Future<_i9.Response<dynamic>>.value(
            _i10.dummyValue<_i9.Response<dynamic>>(
          this,
          Invocation.method(
            #registerapple,
            [token],
          ),
        )),
      ) as _i6.Future<_i9.Response<dynamic>>);

  @override
  _i6.Future<_i9.Response<dynamic>> getuser(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getuser,
          [token],
        ),
        returnValue: _i6.Future<_i9.Response<dynamic>>.value(
            _i10.dummyValue<_i9.Response<dynamic>>(
          this,
          Invocation.method(
            #getuser,
            [token],
          ),
        )),
      ) as _i6.Future<_i9.Response<dynamic>>);

  @override
  _i6.Future<_i9.Response<dynamic>> forgotpassword(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #forgotpassword,
          [email],
        ),
        returnValue: _i6.Future<_i9.Response<dynamic>>.value(
            _i10.dummyValue<_i9.Response<dynamic>>(
          this,
          Invocation.method(
            #forgotpassword,
            [email],
          ),
        )),
      ) as _i6.Future<_i9.Response<dynamic>>);

  @override
  _i6.Future<_i9.Response<dynamic>> resetpassword(
    String? email,
    String? password,
    String? resettoken,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetpassword,
          [
            email,
            password,
            resettoken,
          ],
        ),
        returnValue: _i6.Future<_i9.Response<dynamic>>.value(
            _i10.dummyValue<_i9.Response<dynamic>>(
          this,
          Invocation.method(
            #resetpassword,
            [
              email,
              password,
              resettoken,
            ],
          ),
        )),
      ) as _i6.Future<_i9.Response<dynamic>>);

  @override
  _i6.Future<_i9.Response<dynamic>> logout(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #logout,
          [token],
        ),
        returnValue: _i6.Future<_i9.Response<dynamic>>.value(
            _i10.dummyValue<_i9.Response<dynamic>>(
          this,
          Invocation.method(
            #logout,
            [token],
          ),
        )),
      ) as _i6.Future<_i9.Response<dynamic>>);
}

/// A class which mocks [SettingApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingApiService extends _i1.Mock implements _i12.SettingApiService {
  MockSettingApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i9.Response<dynamic>> getappsettings() => (super.noSuchMethod(
        Invocation.method(
          #getappsettings,
          [],
        ),
        returnValue: _i6.Future<_i9.Response<dynamic>>.value(
            _i10.dummyValue<_i9.Response<dynamic>>(
          this,
          Invocation.method(
            #getappsettings,
            [],
          ),
        )),
      ) as _i6.Future<_i9.Response<dynamic>>);
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i13.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Result<_i14.AuthModel>> login(
    String? indentifiant,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            indentifiant,
            password,
          ],
        ),
        returnValue: _i6.Future<_i2.Result<_i14.AuthModel>>.value(
            _FakeResult_1<_i14.AuthModel>(
          this,
          Invocation.method(
            #login,
            [
              indentifiant,
              password,
            ],
          ),
        )),
      ) as _i6.Future<_i2.Result<_i14.AuthModel>>);

  @override
  _i6.Future<_i2.Result<_i14.AuthModel>> register(
    String? name,
    String? email,
    String? phone,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [
            name,
            email,
            phone,
            password,
          ],
        ),
        returnValue: _i6.Future<_i2.Result<_i14.AuthModel>>.value(
            _FakeResult_1<_i14.AuthModel>(
          this,
          Invocation.method(
            #register,
            [
              name,
              email,
              phone,
              password,
            ],
          ),
        )),
      ) as _i6.Future<_i2.Result<_i14.AuthModel>>);

  @override
  _i6.Future<_i2.Result<_i14.AuthModel>> registerfacebook(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerfacebook,
          [token],
        ),
        returnValue: _i6.Future<_i2.Result<_i14.AuthModel>>.value(
            _FakeResult_1<_i14.AuthModel>(
          this,
          Invocation.method(
            #registerfacebook,
            [token],
          ),
        )),
      ) as _i6.Future<_i2.Result<_i14.AuthModel>>);

  @override
  _i6.Future<_i2.Result<_i14.AuthModel>> registergoogle(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #registergoogle,
          [token],
        ),
        returnValue: _i6.Future<_i2.Result<_i14.AuthModel>>.value(
            _FakeResult_1<_i14.AuthModel>(
          this,
          Invocation.method(
            #registergoogle,
            [token],
          ),
        )),
      ) as _i6.Future<_i2.Result<_i14.AuthModel>>);

  @override
  _i6.Future<_i2.Result<_i14.AuthModel>> registerapple(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerapple,
          [token],
        ),
        returnValue: _i6.Future<_i2.Result<_i14.AuthModel>>.value(
            _FakeResult_1<_i14.AuthModel>(
          this,
          Invocation.method(
            #registerapple,
            [token],
          ),
        )),
      ) as _i6.Future<_i2.Result<_i14.AuthModel>>);

  @override
  _i6.Future<_i2.Result<_i7.User>> getuser(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getuser,
          [token],
        ),
        returnValue:
            _i6.Future<_i2.Result<_i7.User>>.value(_FakeResult_1<_i7.User>(
          this,
          Invocation.method(
            #getuser,
            [token],
          ),
        )),
      ) as _i6.Future<_i2.Result<_i7.User>>);

  @override
  _i6.Future<_i2.Result<_i15.ApiModel>> forgotpassword(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #forgotpassword,
          [email],
        ),
        returnValue: _i6.Future<_i2.Result<_i15.ApiModel>>.value(
            _FakeResult_1<_i15.ApiModel>(
          this,
          Invocation.method(
            #forgotpassword,
            [email],
          ),
        )),
      ) as _i6.Future<_i2.Result<_i15.ApiModel>>);

  @override
  _i6.Future<_i2.Result<_i15.ApiModel>> resetpassword(
    String? email,
    String? password,
    String? resettoken,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetpassword,
          [
            email,
            password,
            resettoken,
          ],
        ),
        returnValue: _i6.Future<_i2.Result<_i15.ApiModel>>.value(
            _FakeResult_1<_i15.ApiModel>(
          this,
          Invocation.method(
            #resetpassword,
            [
              email,
              password,
              resettoken,
            ],
          ),
        )),
      ) as _i6.Future<_i2.Result<_i15.ApiModel>>);

  @override
  _i6.Future<bool> deletetoken() => (super.noSuchMethod(
        Invocation.method(
          #deletetoken,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> savetoken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #savetoken,
          [token],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> hastoken() => (super.noSuchMethod(
        Invocation.method(
          #hastoken,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<_i2.Result<_i15.ApiModel>> logout(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #logout,
          [token],
        ),
        returnValue: _i6.Future<_i2.Result<_i15.ApiModel>>.value(
            _FakeResult_1<_i15.ApiModel>(
          this,
          Invocation.method(
            #logout,
            [token],
          ),
        )),
      ) as _i6.Future<_i2.Result<_i15.ApiModel>>);
}

/// A class which mocks [SettingRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingRepository extends _i1.Mock implements _i16.SettingRepository {
  MockSettingRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Result<_i17.Setting>> getappsettings() => (super.noSuchMethod(
        Invocation.method(
          #getappsettings,
          [],
        ),
        returnValue: _i6.Future<_i2.Result<_i17.Setting>>.value(
            _FakeResult_1<_i17.Setting>(
          this,
          Invocation.method(
            #getappsettings,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Result<_i17.Setting>>);
}

/// A class which mocks [SettingDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingDao extends _i1.Mock implements _i18.SettingDao {
  MockSettingDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.MyDatabase get attachedDatabase => (super.noSuchMethod(
        Invocation.getter(#attachedDatabase),
        returnValue: _FakeMyDatabase_2(
          this,
          Invocation.getter(#attachedDatabase),
        ),
      ) as _i3.MyDatabase);

  @override
  _i4.DatabaseConnection get connection => (super.noSuchMethod(
        Invocation.getter(#connection),
        returnValue: _FakeDatabaseConnection_3(
          this,
          Invocation.getter(#connection),
        ),
      ) as _i4.DatabaseConnection);

  @override
  _i4.SqlTypes get typeMapping => (super.noSuchMethod(
        Invocation.getter(#typeMapping),
        returnValue: _i10.dummyValue<_i4.SqlTypes>(
          this,
          Invocation.getter(#typeMapping),
        ),
      ) as _i4.SqlTypes);

  @override
  _i4.DriftDatabaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeDriftDatabaseOptions_4(
          this,
          Invocation.getter(#options),
        ),
      ) as _i4.DriftDatabaseOptions);

  @override
  _i4.QueryExecutor get executor => (super.noSuchMethod(
        Invocation.getter(#executor),
        returnValue: _FakeQueryExecutor_5(
          this,
          Invocation.getter(#executor),
        ),
      ) as _i4.QueryExecutor);

  @override
  _i5.StreamQueryStore get streamQueries => (super.noSuchMethod(
        Invocation.getter(#streamQueries),
        returnValue: _FakeStreamQueryStore_6(
          this,
          Invocation.getter(#streamQueries),
        ),
      ) as _i5.StreamQueryStore);

  @override
  _i4.DatabaseConnectionUser get resolvedEngine => (super.noSuchMethod(
        Invocation.getter(#resolvedEngine),
        returnValue: _FakeDatabaseConnectionUser_7(
          this,
          Invocation.getter(#resolvedEngine),
        ),
      ) as _i4.DatabaseConnectionUser);

  @override
  _i3.$SettingTableTable get settingTable => (super.noSuchMethod(
        Invocation.getter(#settingTable),
        returnValue: _Fake$SettingTableTable_8(
          this,
          Invocation.getter(#settingTable),
        ),
      ) as _i3.$SettingTableTable);

  @override
  _i6.Future<_i3.SettingTableData?> getSetting() => (super.noSuchMethod(
        Invocation.method(
          #getSetting,
          [],
        ),
        returnValue: _i6.Future<_i3.SettingTableData?>.value(),
      ) as _i6.Future<_i3.SettingTableData?>);

  @override
  _i6.Future<int> addSetting(_i3.SettingTableCompanion? entry) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSetting,
          [entry],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<dynamic> updateSetting(_i3.SettingTableCompanion? entry) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSetting,
          [entry],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);

  @override
  _i6.Stream<List<Map<String, Object?>>> createStream(
          _i5.QueryStreamFetcher? stmt) =>
      (super.noSuchMethod(
        Invocation.method(
          #createStream,
          [stmt],
        ),
        returnValue: _i6.Stream<List<Map<String, Object?>>>.empty(),
      ) as _i6.Stream<List<Map<String, Object?>>>);

  @override
  T alias<T, D>(
    _i4.ResultSetImplementation<T, D>? table,
    String? alias,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #alias,
          [
            table,
            alias,
          ],
        ),
        returnValue: _i10.dummyValue<T>(
          this,
          Invocation.method(
            #alias,
            [
              table,
              alias,
            ],
          ),
        ),
      ) as T);

  @override
  void markTablesUpdated(Iterable<_i4.TableInfo<_i4.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(
          #markTablesUpdated,
          [tables],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyUpdates(Set<_i4.TableUpdate>? updates) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdates,
          [updates],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Stream<Set<_i4.TableUpdate>> tableUpdates(
          [_i4.TableUpdateQuery? query = const _i4.TableUpdateQuery.any()]) =>
      (super.noSuchMethod(
        Invocation.method(
          #tableUpdates,
          [query],
        ),
        returnValue: _i6.Stream<Set<_i4.TableUpdate>>.empty(),
      ) as _i6.Stream<Set<_i4.TableUpdate>>);

  @override
  _i6.Future<T> doWhenOpened<T>(
          _i6.FutureOr<T> Function(_i4.QueryExecutor)? fn) =>
      (super.noSuchMethod(
        Invocation.method(
          #doWhenOpened,
          [fn],
        ),
        returnValue: _i10.ifNotNull(
              _i10.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #doWhenOpened,
                  [fn],
                ),
              ),
              (T v) => _i6.Future<T>.value(v),
            ) ??
            _FakeFuture_9<T>(
              this,
              Invocation.method(
                #doWhenOpened,
                [fn],
              ),
            ),
      ) as _i6.Future<T>);

  @override
  _i4.InsertStatement<T, D> into<T extends _i4.Table, D>(
          _i4.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #into,
          [table],
        ),
        returnValue: _FakeInsertStatement_10<T, D>(
          this,
          Invocation.method(
            #into,
            [table],
          ),
        ),
      ) as _i4.InsertStatement<T, D>);

  @override
  _i4.UpdateStatement<Tbl, R> update<Tbl extends _i4.Table, R>(
          _i4.TableInfo<Tbl, R>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [table],
        ),
        returnValue: _FakeUpdateStatement_11<Tbl, R>(
          this,
          Invocation.method(
            #update,
            [table],
          ),
        ),
      ) as _i4.UpdateStatement<Tbl, R>);

  @override
  _i4.SimpleSelectStatement<T, R> select<T extends _i4.HasResultSet, R>(
    _i4.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #select,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeSimpleSelectStatement_12<T, R>(
          this,
          Invocation.method(
            #select,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i4.SimpleSelectStatement<T, R>);

  @override
  _i4.JoinedSelectStatement<T, R> selectOnly<T extends _i4.HasResultSet, R>(
    _i4.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectOnly,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeJoinedSelectStatement_13<T, R>(
          this,
          Invocation.method(
            #selectOnly,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i4.JoinedSelectStatement<T, R>);

  @override
  _i4.DeleteStatement<T, D> delete<T extends _i4.Table, D>(
          _i4.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [table],
        ),
        returnValue: _FakeDeleteStatement_14<T, D>(
          this,
          Invocation.method(
            #delete,
            [table],
          ),
        ),
      ) as _i4.DeleteStatement<T, D>);

  @override
  _i6.Future<int> customUpdate(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.TableInfo<_i4.Table, dynamic>>? updates,
    _i4.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customUpdate,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<int> customInsert(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.TableInfo<_i4.Table, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customInsert,
          [query],
          {
            #variables: variables,
            #updates: updates,
          },
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<List<_i4.QueryRow>> customWriteReturning(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.TableInfo<_i4.Table, dynamic>>? updates,
    _i4.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customWriteReturning,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i6.Future<List<_i4.QueryRow>>.value(<_i4.QueryRow>[]),
      ) as _i6.Future<List<_i4.QueryRow>>);

  @override
  _i4.Selectable<_i4.QueryRow> customSelect(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelect,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_15<_i4.QueryRow>(
          this,
          Invocation.method(
            #customSelect,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i4.Selectable<_i4.QueryRow>);

  @override
  _i4.Selectable<_i4.QueryRow> customSelectQuery(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelectQuery,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_15<_i4.QueryRow>(
          this,
          Invocation.method(
            #customSelectQuery,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i4.Selectable<_i4.QueryRow>);

  @override
  _i6.Future<void> customStatement(
    String? statement, [
    List<dynamic>? args,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #customStatement,
          [
            statement,
            args,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<T> transaction<T>(
    _i6.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #transaction,
          [action],
          {#requireNew: requireNew},
        ),
        returnValue: _i10.ifNotNull(
              _i10.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #transaction,
                  [action],
                  {#requireNew: requireNew},
                ),
              ),
              (T v) => _i6.Future<T>.value(v),
            ) ??
            _FakeFuture_9<T>(
              this,
              Invocation.method(
                #transaction,
                [action],
                {#requireNew: requireNew},
              ),
            ),
      ) as _i6.Future<T>);

  @override
  _i6.Future<void> batch(_i6.FutureOr<void> Function(_i4.Batch)? runInBatch) =>
      (super.noSuchMethod(
        Invocation.method(
          #batch,
          [runInBatch],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i4.GenerationContext $write(
    _i4.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$write,
          [component],
          {
            #hasMultipleTables: hasMultipleTables,
            #startIndex: startIndex,
          },
        ),
        returnValue: _FakeGenerationContext_16(
          this,
          Invocation.method(
            #$write,
            [component],
            {
              #hasMultipleTables: hasMultipleTables,
              #startIndex: startIndex,
            },
          ),
        ),
      ) as _i4.GenerationContext);

  @override
  _i4.GenerationContext $writeInsertable(
    _i4.TableInfo<_i4.Table, dynamic>? table,
    _i4.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$writeInsertable,
          [
            table,
            insertable,
          ],
          {#startIndex: startIndex},
        ),
        returnValue: _FakeGenerationContext_16(
          this,
          Invocation.method(
            #$writeInsertable,
            [
              table,
              insertable,
            ],
            {#startIndex: startIndex},
          ),
        ),
      ) as _i4.GenerationContext);

  @override
  String $expandVar(
    int? start,
    int? amount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #$expandVar,
          [
            start,
            amount,
          ],
        ),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.method(
            #$expandVar,
            [
              start,
              amount,
            ],
          ),
        ),
      ) as String);

  @override
  _i6.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [UserDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserDao extends _i1.Mock implements _i19.UserDao {
  MockUserDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.MyDatabase get attachedDatabase => (super.noSuchMethod(
        Invocation.getter(#attachedDatabase),
        returnValue: _FakeMyDatabase_2(
          this,
          Invocation.getter(#attachedDatabase),
        ),
      ) as _i3.MyDatabase);

  @override
  _i4.DatabaseConnection get connection => (super.noSuchMethod(
        Invocation.getter(#connection),
        returnValue: _FakeDatabaseConnection_3(
          this,
          Invocation.getter(#connection),
        ),
      ) as _i4.DatabaseConnection);

  @override
  _i4.SqlTypes get typeMapping => (super.noSuchMethod(
        Invocation.getter(#typeMapping),
        returnValue: _i10.dummyValue<_i4.SqlTypes>(
          this,
          Invocation.getter(#typeMapping),
        ),
      ) as _i4.SqlTypes);

  @override
  _i4.DriftDatabaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeDriftDatabaseOptions_4(
          this,
          Invocation.getter(#options),
        ),
      ) as _i4.DriftDatabaseOptions);

  @override
  _i4.QueryExecutor get executor => (super.noSuchMethod(
        Invocation.getter(#executor),
        returnValue: _FakeQueryExecutor_5(
          this,
          Invocation.getter(#executor),
        ),
      ) as _i4.QueryExecutor);

  @override
  _i5.StreamQueryStore get streamQueries => (super.noSuchMethod(
        Invocation.getter(#streamQueries),
        returnValue: _FakeStreamQueryStore_6(
          this,
          Invocation.getter(#streamQueries),
        ),
      ) as _i5.StreamQueryStore);

  @override
  _i4.DatabaseConnectionUser get resolvedEngine => (super.noSuchMethod(
        Invocation.getter(#resolvedEngine),
        returnValue: _FakeDatabaseConnectionUser_7(
          this,
          Invocation.getter(#resolvedEngine),
        ),
      ) as _i4.DatabaseConnectionUser);

  @override
  _i3.$UserTableTable get userTable => (super.noSuchMethod(
        Invocation.getter(#userTable),
        returnValue: _Fake$UserTableTable_17(
          this,
          Invocation.getter(#userTable),
        ),
      ) as _i3.$UserTableTable);

  @override
  _i6.Future<_i3.UserTableData> getUser() => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [],
        ),
        returnValue: _i6.Future<_i3.UserTableData>.value(_FakeUserTableData_18(
          this,
          Invocation.method(
            #getUser,
            [],
          ),
        )),
      ) as _i6.Future<_i3.UserTableData>);

  @override
  _i6.Future<int> addUser(_i3.UserTableCompanion? entry) => (super.noSuchMethod(
        Invocation.method(
          #addUser,
          [entry],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<dynamic> updateUser(_i3.UserTableCompanion? entry) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [entry],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);

  @override
  _i6.Future<dynamic> deleteUser() => (super.noSuchMethod(
        Invocation.method(
          #deleteUser,
          [],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);

  @override
  _i6.Stream<List<Map<String, Object?>>> createStream(
          _i5.QueryStreamFetcher? stmt) =>
      (super.noSuchMethod(
        Invocation.method(
          #createStream,
          [stmt],
        ),
        returnValue: _i6.Stream<List<Map<String, Object?>>>.empty(),
      ) as _i6.Stream<List<Map<String, Object?>>>);

  @override
  T alias<T, D>(
    _i4.ResultSetImplementation<T, D>? table,
    String? alias,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #alias,
          [
            table,
            alias,
          ],
        ),
        returnValue: _i10.dummyValue<T>(
          this,
          Invocation.method(
            #alias,
            [
              table,
              alias,
            ],
          ),
        ),
      ) as T);

  @override
  void markTablesUpdated(Iterable<_i4.TableInfo<_i4.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(
          #markTablesUpdated,
          [tables],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyUpdates(Set<_i4.TableUpdate>? updates) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdates,
          [updates],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Stream<Set<_i4.TableUpdate>> tableUpdates(
          [_i4.TableUpdateQuery? query = const _i4.TableUpdateQuery.any()]) =>
      (super.noSuchMethod(
        Invocation.method(
          #tableUpdates,
          [query],
        ),
        returnValue: _i6.Stream<Set<_i4.TableUpdate>>.empty(),
      ) as _i6.Stream<Set<_i4.TableUpdate>>);

  @override
  _i6.Future<T> doWhenOpened<T>(
          _i6.FutureOr<T> Function(_i4.QueryExecutor)? fn) =>
      (super.noSuchMethod(
        Invocation.method(
          #doWhenOpened,
          [fn],
        ),
        returnValue: _i10.ifNotNull(
              _i10.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #doWhenOpened,
                  [fn],
                ),
              ),
              (T v) => _i6.Future<T>.value(v),
            ) ??
            _FakeFuture_9<T>(
              this,
              Invocation.method(
                #doWhenOpened,
                [fn],
              ),
            ),
      ) as _i6.Future<T>);

  @override
  _i4.InsertStatement<T, D> into<T extends _i4.Table, D>(
          _i4.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #into,
          [table],
        ),
        returnValue: _FakeInsertStatement_10<T, D>(
          this,
          Invocation.method(
            #into,
            [table],
          ),
        ),
      ) as _i4.InsertStatement<T, D>);

  @override
  _i4.UpdateStatement<Tbl, R> update<Tbl extends _i4.Table, R>(
          _i4.TableInfo<Tbl, R>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [table],
        ),
        returnValue: _FakeUpdateStatement_11<Tbl, R>(
          this,
          Invocation.method(
            #update,
            [table],
          ),
        ),
      ) as _i4.UpdateStatement<Tbl, R>);

  @override
  _i4.SimpleSelectStatement<T, R> select<T extends _i4.HasResultSet, R>(
    _i4.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #select,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeSimpleSelectStatement_12<T, R>(
          this,
          Invocation.method(
            #select,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i4.SimpleSelectStatement<T, R>);

  @override
  _i4.JoinedSelectStatement<T, R> selectOnly<T extends _i4.HasResultSet, R>(
    _i4.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectOnly,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeJoinedSelectStatement_13<T, R>(
          this,
          Invocation.method(
            #selectOnly,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i4.JoinedSelectStatement<T, R>);

  @override
  _i4.DeleteStatement<T, D> delete<T extends _i4.Table, D>(
          _i4.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [table],
        ),
        returnValue: _FakeDeleteStatement_14<T, D>(
          this,
          Invocation.method(
            #delete,
            [table],
          ),
        ),
      ) as _i4.DeleteStatement<T, D>);

  @override
  _i6.Future<int> customUpdate(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.TableInfo<_i4.Table, dynamic>>? updates,
    _i4.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customUpdate,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<int> customInsert(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.TableInfo<_i4.Table, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customInsert,
          [query],
          {
            #variables: variables,
            #updates: updates,
          },
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<List<_i4.QueryRow>> customWriteReturning(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.TableInfo<_i4.Table, dynamic>>? updates,
    _i4.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customWriteReturning,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i6.Future<List<_i4.QueryRow>>.value(<_i4.QueryRow>[]),
      ) as _i6.Future<List<_i4.QueryRow>>);

  @override
  _i4.Selectable<_i4.QueryRow> customSelect(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelect,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_15<_i4.QueryRow>(
          this,
          Invocation.method(
            #customSelect,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i4.Selectable<_i4.QueryRow>);

  @override
  _i4.Selectable<_i4.QueryRow> customSelectQuery(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelectQuery,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_15<_i4.QueryRow>(
          this,
          Invocation.method(
            #customSelectQuery,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i4.Selectable<_i4.QueryRow>);

  @override
  _i6.Future<void> customStatement(
    String? statement, [
    List<dynamic>? args,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #customStatement,
          [
            statement,
            args,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<T> transaction<T>(
    _i6.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #transaction,
          [action],
          {#requireNew: requireNew},
        ),
        returnValue: _i10.ifNotNull(
              _i10.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #transaction,
                  [action],
                  {#requireNew: requireNew},
                ),
              ),
              (T v) => _i6.Future<T>.value(v),
            ) ??
            _FakeFuture_9<T>(
              this,
              Invocation.method(
                #transaction,
                [action],
                {#requireNew: requireNew},
              ),
            ),
      ) as _i6.Future<T>);

  @override
  _i6.Future<void> batch(_i6.FutureOr<void> Function(_i4.Batch)? runInBatch) =>
      (super.noSuchMethod(
        Invocation.method(
          #batch,
          [runInBatch],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i4.GenerationContext $write(
    _i4.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$write,
          [component],
          {
            #hasMultipleTables: hasMultipleTables,
            #startIndex: startIndex,
          },
        ),
        returnValue: _FakeGenerationContext_16(
          this,
          Invocation.method(
            #$write,
            [component],
            {
              #hasMultipleTables: hasMultipleTables,
              #startIndex: startIndex,
            },
          ),
        ),
      ) as _i4.GenerationContext);

  @override
  _i4.GenerationContext $writeInsertable(
    _i4.TableInfo<_i4.Table, dynamic>? table,
    _i4.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$writeInsertable,
          [
            table,
            insertable,
          ],
          {#startIndex: startIndex},
        ),
        returnValue: _FakeGenerationContext_16(
          this,
          Invocation.method(
            #$writeInsertable,
            [
              table,
              insertable,
            ],
            {#startIndex: startIndex},
          ),
        ),
      ) as _i4.GenerationContext);

  @override
  String $expandVar(
    int? start,
    int? amount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #$expandVar,
          [
            start,
            amount,
          ],
        ),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.method(
            #$expandVar,
            [
              start,
              amount,
            ],
          ),
        ),
      ) as String);

  @override
  _i6.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [SharedPreferencesHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferencesHelper extends _i1.Mock
    implements _i20.SharedPreferencesHelper {
  MockSharedPreferencesHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<bool> setIsFirstOpen(bool? first) => (super.noSuchMethod(
        Invocation.method(
          #setIsFirstOpen,
          [first],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> getIsFirstOpen() => (super.noSuchMethod(
        Invocation.method(
          #getIsFirstOpen,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> setToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #setToken,
          [token],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> deleteToken() => (super.noSuchMethod(
        Invocation.method(
          #deleteToken,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<String?> getToken() => (super.noSuchMethod(
        Invocation.method(
          #getToken,
          [],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);
}

/// A class which mocks [NetworkInfoHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfoHelper extends _i1.Mock implements _i21.NetworkInfoHelper {
  MockNetworkInfoHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<bool> isConnected() => (super.noSuchMethod(
        Invocation.method(
          #isConnected,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i7.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set id(int? _id) => super.noSuchMethod(
        Invocation.setter(
          #id,
          _id,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set name(String? _name) => super.noSuchMethod(
        Invocation.setter(
          #name,
          _name,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set email(String? _email) => super.noSuchMethod(
        Invocation.setter(
          #email,
          _email,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set emailVerifiedAt(DateTime? _emailVerifiedAt) => super.noSuchMethod(
        Invocation.setter(
          #emailVerifiedAt,
          _emailVerifiedAt,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set phone(dynamic _phone) => super.noSuchMethod(
        Invocation.setter(
          #phone,
          _phone,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set fcmToken(dynamic _fcmToken) => super.noSuchMethod(
        Invocation.setter(
          #fcmToken,
          _fcmToken,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set imageProfil(String? _imageProfil) => super.noSuchMethod(
        Invocation.setter(
          #imageProfil,
          _imageProfil,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set abonnementId(int? _abonnementId) => super.noSuchMethod(
        Invocation.setter(
          #abonnementId,
          _abonnementId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set deletedAt(dynamic _deletedAt) => super.noSuchMethod(
        Invocation.setter(
          #deletedAt,
          _deletedAt,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set createdAt(DateTime? _createdAt) => super.noSuchMethod(
        Invocation.setter(
          #createdAt,
          _createdAt,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set updatedAt(DateTime? _updatedAt) => super.noSuchMethod(
        Invocation.setter(
          #updatedAt,
          _updatedAt,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set roles(List<_i22.Role>? _roles) => super.noSuchMethod(
        Invocation.setter(
          #roles,
          _roles,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set abonnement(_i23.Abonnement? _abonnement) => super.noSuchMethod(
        Invocation.setter(
          #abonnement,
          _abonnement,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i7.User copyWith({
    int? id,
    String? name,
    String? email,
    DateTime? emailVerifiedAt,
    dynamic phone,
    dynamic fcmToken,
    String? imageProfil,
    int? abonnementId,
    dynamic deletedAt,
    DateTime? createdAt,
    DateTime? updatedAt,
    List<_i22.Role>? roles,
    _i23.Abonnement? abonnement,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #id: id,
            #name: name,
            #email: email,
            #emailVerifiedAt: emailVerifiedAt,
            #phone: phone,
            #fcmToken: fcmToken,
            #imageProfil: imageProfil,
            #abonnementId: abonnementId,
            #deletedAt: deletedAt,
            #createdAt: createdAt,
            #updatedAt: updatedAt,
            #roles: roles,
            #abonnement: abonnement,
          },
        ),
        returnValue: _FakeUser_19(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #id: id,
              #name: name,
              #email: email,
              #emailVerifiedAt: emailVerifiedAt,
              #phone: phone,
              #fcmToken: fcmToken,
              #imageProfil: imageProfil,
              #abonnementId: abonnementId,
              #deletedAt: deletedAt,
              #createdAt: createdAt,
              #updatedAt: updatedAt,
              #roles: roles,
              #abonnement: abonnement,
            },
          ),
        ),
      ) as _i7.User);
}

/// A class which mocks [Setting].
///
/// See the documentation for Mockito's code generation for more information.
class MockSetting extends _i1.Mock implements _i17.Setting {
  MockSetting() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set id(int? _id) => super.noSuchMethod(
        Invocation.setter(
          #id,
          _id,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set appName(String? _appName) => super.noSuchMethod(
        Invocation.setter(
          #appName,
          _appName,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set appApiUrl(String? _appApiUrl) => super.noSuchMethod(
        Invocation.setter(
          #appApiUrl,
          _appApiUrl,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set appApiKey(String? _appApiKey) => super.noSuchMethod(
        Invocation.setter(
          #appApiKey,
          _appApiKey,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set appVersion(String? _appVersion) => super.noSuchMethod(
        Invocation.setter(
          #appVersion,
          _appVersion,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set appDescription(String? _appDescription) => super.noSuchMethod(
        Invocation.setter(
          #appDescription,
          _appDescription,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set appLogo(String? _appLogo) => super.noSuchMethod(
        Invocation.setter(
          #appLogo,
          _appLogo,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set androidAppVersion(String? _androidAppVersion) => super.noSuchMethod(
        Invocation.setter(
          #androidAppVersion,
          _androidAppVersion,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set iosAppVersion(String? _iosAppVersion) => super.noSuchMethod(
        Invocation.setter(
          #iosAppVersion,
          _iosAppVersion,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set iosAppLink(String? _iosAppLink) => super.noSuchMethod(
        Invocation.setter(
          #iosAppLink,
          _iosAppLink,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set androidAppLink(String? _androidAppLink) => super.noSuchMethod(
        Invocation.setter(
          #androidAppLink,
          _androidAppLink,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set privacyPolicyLink(String? _privacyPolicyLink) => super.noSuchMethod(
        Invocation.setter(
          #privacyPolicyLink,
          _privacyPolicyLink,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set termsOfServiceLink(String? _termsOfServiceLink) => super.noSuchMethod(
        Invocation.setter(
          #termsOfServiceLink,
          _termsOfServiceLink,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set contactEmail(String? _contactEmail) => super.noSuchMethod(
        Invocation.setter(
          #contactEmail,
          _contactEmail,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set contactPhone(String? _contactPhone) => super.noSuchMethod(
        Invocation.setter(
          #contactPhone,
          _contactPhone,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set contactAddress(String? _contactAddress) => super.noSuchMethod(
        Invocation.setter(
          #contactAddress,
          _contactAddress,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set facebookLink(String? _facebookLink) => super.noSuchMethod(
        Invocation.setter(
          #facebookLink,
          _facebookLink,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set twitterLink(String? _twitterLink) => super.noSuchMethod(
        Invocation.setter(
          #twitterLink,
          _twitterLink,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set linkedinLink(String? _linkedinLink) => super.noSuchMethod(
        Invocation.setter(
          #linkedinLink,
          _linkedinLink,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set maintenanceMode(bool? _maintenanceMode) => super.noSuchMethod(
        Invocation.setter(
          #maintenanceMode,
          _maintenanceMode,
        ),
        returnValueForMissingStub: false,
      );

  @override
  set mapApiKey(String? _mapApiKey) => super.noSuchMethod(
        Invocation.setter(
          #mapApiKey,
          _mapApiKey,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set defaultMapStyle(String? _defaultMapStyle) => super.noSuchMethod(
        Invocation.setter(
          #defaultMapStyle,
          _defaultMapStyle,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set isFacebookLoginEnabled(bool? _isFacebookLoginEnabled) =>
      super.noSuchMethod(
        Invocation.setter(
          #isFacebookLoginEnabled,
          _isFacebookLoginEnabled,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set isGoogleLoginEnabled(bool? _isGoogleLoginEnabled) => super.noSuchMethod(
        Invocation.setter(
          #isGoogleLoginEnabled,
          _isGoogleLoginEnabled,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set isOsmLoginEnabled(bool? _isOsmLoginEnabled) => super.noSuchMethod(
        Invocation.setter(
          #isOsmLoginEnabled,
          _isOsmLoginEnabled,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set isAppleLoginEnabled(bool? _isAppleLoginEnabled) => super.noSuchMethod(
        Invocation.setter(
          #isAppleLoginEnabled,
          _isAppleLoginEnabled,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}
